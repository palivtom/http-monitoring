openapi: 3.0.3
info:
  version: 1.0.0
  title: Http Monitoring Service Specification

tags:
  - name: MonitoringEndpoint
    description: Endpoints for monitoring other enpoint

paths:
  /monitoringEndpoints:
    get:
      tags:
        - MonitoringEndpoint
      summary: Get logged in user monitoring endpoints
      operationId: getMonitoringEndpoints
      parameters:
        - in: query
          required: false
          name: pageSize
          description: Number of elements on single page
          schema:
            type: integer
            format: int32
            default: 30
        - in: query
          required: false
          name: page
          description: Page number (0 is first)
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          required: false
          name: filter
          description: Name of filtered element
          example: createdAt
          schema:
            type: string
            default: createdAt
        - in: query
          required: false
          name: order
          description: Order of filtered element
          example: DESC
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: DESC
        - in: query
          required: false
          name: validOnly
          description: Gets valid only or all
          example: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Returns page of monitoring endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringEndpointPageable'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - MonitoringEndpoint
      summary: Create monitoring endpoint for currently logged in user
      operationId: createMonitoringEndpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringEndpoint'
      responses:
        '201':
          description: Returns created monitoring endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringEndpoint'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /monitoringEndpoints/{monitoringEndpointId}:
    get:
      tags:
        - MonitoringEndpoint
      summary: Get monitoring endpoint by id
      operationId: getMonitoringEndpoint
      parameters:
        - in: path
          required: true
          name: monitoringEndpointId
          description: Id of monitoring endpoint
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns monitoring endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringEndpoint'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - MonitoringEndpoint
      summary: Edit monitoring endpoint
      operationId: editMonitoringEndpoint
      parameters:
        - in: path
          required: true
          name: monitoringEndpointId
          description: Id of monitoring endpoint
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringEndpoint'

      responses:
        '200':
          description: Returns edited monitoring endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringEndpoint'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - MonitoringEndpoint
      summary: Delete monitoring endpoint
      operationId: deleteMonitoringEndpoint
      parameters:
        - in: path
          required: true
          name: monitoringEndpointId
          description: Id of monitoring endpoint
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: Returns deleted monitoring endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringEndpoint'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    AccessTokenAuth:
      type: apiKey
      in: header
      name: accessToken

  responses:
    BadRequest:
      description: Indicates a nonspecific client error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exception'

    Unauthorized:
      description: Unauthorized request - sent when the client either provided invalid credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exception'

    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exception'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exception'

  schemas:
    Exception:
      type: object
      properties:
        code:
          type: integer
          example: 400
        title:
          type: string
          example: Wrong input parameter
        message:
          type: string
          example:
            Wrong parameter for endpoint /example/endpoint, wrong endpointId value.

    MonitoringEndpointPageable:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
          example: 30
        pagesOverAll:
          type: integer
          format: int32
          example: 2
        page:
          type: integer
          format: int32
        monitoringEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/MonitoringEndpoint'

    MonitoringEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
          format: int64
        authorId:
          readOnly: true
          type: integer
          format: int64
        title:
          type: string
          example: Seznam.cz down monitor
        url:
          type: string
          example: https://www.seznam.cz
        interval:
          type: integer
          format: int32
          example: 5
        checkedAt:
          $ref: '#/components/schemas/DateTime'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
        deletedAt:
          $ref: '#/components/schemas/DateTime'
        responses:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MonitoringEndpointResponse'

    MonitoringEndpointResponse:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
          format: int64
        httpCode:
          readOnly: true
          type: integer
          format: int32
          example: 200
        payload:
          readOnly: true
          type: string
          example: null
        createdAt:
          $ref: '#/components/schemas/DateTime'

    DateTime:
      type: string
      readOnly: true
      example: 2000-10-31T01:30:00.000-05:00


security:
  - AccessTokenAuth: []